///
/// NitroInput-Swift-Cxx-Bridge.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "NitroInput-Swift-Cxx-Bridge.hpp"

// Include C++ implementation defined types
#include "HybridNitroTextInputViewSpecSwift.hpp"
#include "NitroInput-Swift-Cxx-Umbrella.hpp"

namespace margelo::nitro::nitroinput::bridge::swift {

  // pragma MARK: std::function<void(const std::string& /* value */)>
  Func_void_std__string create_Func_void_std__string(void* _Nonnull swiftClosureWrapper) noexcept {
    auto swiftClosure = NitroInput::Func_void_std__string::fromUnsafe(swiftClosureWrapper);
    return [swiftClosure = std::move(swiftClosure)](const std::string& value) mutable -> void {
      swiftClosure.call(value);
    };
  }
  
  // pragma MARK: std::shared_ptr<HybridNitroTextInputViewSpec>
  std::shared_ptr<HybridNitroTextInputViewSpec> create_std__shared_ptr_HybridNitroTextInputViewSpec_(void* _Nonnull swiftUnsafePointer) noexcept {
    NitroInput::HybridNitroTextInputViewSpec_cxx swiftPart = NitroInput::HybridNitroTextInputViewSpec_cxx::fromUnsafe(swiftUnsafePointer);
    return std::make_shared<margelo::nitro::nitroinput::HybridNitroTextInputViewSpecSwift>(swiftPart);
  }
  void* _Nonnull get_std__shared_ptr_HybridNitroTextInputViewSpec_(std__shared_ptr_HybridNitroTextInputViewSpec_ cppType) noexcept {
    std::shared_ptr<margelo::nitro::nitroinput::HybridNitroTextInputViewSpecSwift> swiftWrapper = std::dynamic_pointer_cast<margelo::nitro::nitroinput::HybridNitroTextInputViewSpecSwift>(cppType);
    #ifdef NITRO_DEBUG
    if (swiftWrapper == nullptr) [[unlikely]] {
      throw std::runtime_error("Class \"HybridNitroTextInputViewSpec\" is not implemented in Swift!");
    }
    #endif
    NitroInput::HybridNitroTextInputViewSpec_cxx& swiftPart = swiftWrapper->getSwiftPart();
    return swiftPart.toUnsafe();
  }

} // namespace margelo::nitro::nitroinput::bridge::swift
