///
/// HybridNitroTextInputViewSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridNitroTextInputViewSpec.hpp"

namespace margelo::nitro::nitroinput {

  void HybridNitroTextInputViewSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridGetter("allowFontScaling", &HybridNitroTextInputViewSpec::getAllowFontScaling);
      prototype.registerHybridSetter("allowFontScaling", &HybridNitroTextInputViewSpec::setAllowFontScaling);
      prototype.registerHybridGetter("autoCapitalize", &HybridNitroTextInputViewSpec::getAutoCapitalize);
      prototype.registerHybridSetter("autoCapitalize", &HybridNitroTextInputViewSpec::setAutoCapitalize);
      prototype.registerHybridGetter("autoCorrect", &HybridNitroTextInputViewSpec::getAutoCorrect);
      prototype.registerHybridSetter("autoCorrect", &HybridNitroTextInputViewSpec::setAutoCorrect);
      prototype.registerHybridGetter("onChangeText", &HybridNitroTextInputViewSpec::getOnChangeText);
      prototype.registerHybridSetter("onChangeText", &HybridNitroTextInputViewSpec::setOnChangeText);
      prototype.registerHybridGetter("value", &HybridNitroTextInputViewSpec::getValue);
      prototype.registerHybridSetter("value", &HybridNitroTextInputViewSpec::setValue);
      prototype.registerHybridGetter("multiline", &HybridNitroTextInputViewSpec::getMultiline);
      prototype.registerHybridSetter("multiline", &HybridNitroTextInputViewSpec::setMultiline);
      prototype.registerHybridGetter("secureTextEntry", &HybridNitroTextInputViewSpec::getSecureTextEntry);
      prototype.registerHybridSetter("secureTextEntry", &HybridNitroTextInputViewSpec::setSecureTextEntry);
      prototype.registerHybridGetter("placeholder", &HybridNitroTextInputViewSpec::getPlaceholder);
      prototype.registerHybridSetter("placeholder", &HybridNitroTextInputViewSpec::setPlaceholder);
    });
  }

} // namespace margelo::nitro::nitroinput
